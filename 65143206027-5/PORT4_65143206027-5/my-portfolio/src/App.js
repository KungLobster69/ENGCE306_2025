import React, { useState, useEffect } from "react";
import "./App.css";

function App() {
  const [darkMode, setDarkMode] = useState(false);
  const [projects, setProjects] = useState([]);
  const [figText, setFigText] = useState("‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏°‡πÄ‡∏≠‡∏á");
  const [form, setForm] = useState({ name: "", email: "", message: "" });

  useEffect(() => {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    setProjects([
      { name: "‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏á‡πÇ‡∏ã‡∏•‡πà‡∏≤‡πÄ‡∏ã‡∏•‡∏•‡πå", description: "‡∏õ‡∏£‡∏∞‡∏Å‡∏ß‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏á‡πÇ‡∏ã‡∏•‡πà‡∏≤‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥" },
      
    ]);
  }, []);

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ò‡∏µ‡∏°‡πÉ‡∏ô localStorage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏à‡∏≥‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
  useEffect(() => {
    const savedTheme = localStorage.getItem("theme");
    if (savedTheme === "dark") {
      setDarkMode(true);
    }
  }, []);

  useEffect(() => {
    localStorage.setItem("theme", darkMode ? "dark" : "light");
  }, [darkMode]);

  const toggleMode = () => setDarkMode(!darkMode);

  const handleSubmit = (e) => {
    e.preventDefault();
    const { name, email, message } = form;
    if (!name || !email || !message) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á");
    } else {
      alert("‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠! ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î");
      setForm({ name: "", email: "", message: "" });
    }
  };

  return (
    <div className={`App ${darkMode ? "dark" : "light"}`}>
      <header>
        <h1>‡∏ô‡∏≤‡∏¢‡∏Å‡∏±‡∏°‡∏õ‡∏ô‡∏≤‡∏ó ‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏≤</h1>
        <p>‡∏ä‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏à</p>
        <button onClick={toggleMode} className="toggle-btn">
          {darkMode ? "‚òÄÔ∏è ‡πÇ‡∏´‡∏°‡∏î‡∏™‡∏ß‡πà‡∏≤‡∏á" : "üåô ‡πÇ‡∏´‡∏°‡∏î‡∏°‡∏∑‡∏î"}
        </button>
      </header>

      <nav>
        <ul>
          <li><a href="#about">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏â‡∏±‡∏ô</a></li>
          <li><a href="#portfolio">‡∏ú‡∏•‡∏á‡∏≤‡∏ô</a></li>
          <li><a href="#skills">‡∏ó‡∏±‡∏Å‡∏©‡∏∞</a></li>
          <li><a href="#contact">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</a></li>
        </ul>
      </nav>

      <main>
        {/* ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏â‡∏±‡∏ô */}
        <section id="about">
          <h2>‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏â‡∏±‡∏ô</h2>
          <figure>
            <img
              src="/ok.jpg" // ‚úÖ ‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ‡πÉ‡∏ô public/ok.jpg
              alt="‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå"
              onMouseOver={() =>
                setFigText("‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
              }
              onMouseOut={() => setFigText("‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏°‡πÄ‡∏≠‡∏á")}
            />
            <figcaption>{figText}</figcaption>
          </figure>
          <p>
            ‡∏ä‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏à
          </p>
         
        </section>

        {/* ‡∏ú‡∏•‡∏á‡∏≤‡∏ô */}
        <section id="portfolio">
          <h2>‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥</h2>
          <table>
            <thead>
              <tr>
                <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô</th>
                <th>‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô‡πÜ</th>
              </tr>
            </thead>
            <tbody>
              {projects.map((p, i) => (
                <tr key={i}>
                  <td>{p.name}</td>
                  <td>{p.description}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>

        {/* ‡∏ó‡∏±‡∏Å‡∏©‡∏∞ */}
        <section id="skills">
          <h2>‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ</h2>
          <ul>
            <li>‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤</li>
            <li>Network</li>
      
          </ul>
        </section>

        {/* ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà */}
        <section>
          <h2>‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</h2>
          <iframe
            src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3875.705493424696!2d100.531!3d13.736717!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x30e29ed6330a74ff%3A0xb6f77d5d4b2e78e7!2sBangkok!5e0!3m2!1sth!2sth!4v1680000000000"
            width="100%"
            height="450"
            style={{ border: 0 }}
            allowFullScreen
            loading="lazy"
            title="map"
          ></iframe>
        </section>

        {/* ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ */}
        <section id="contact">
          <h2>‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</h2>
          <form onSubmit={handleSubmit}>
            <div>
              <label>‡∏ä‡∏∑‡πà‡∏≠:</label>
              <input
                type="text"
                value={form.name}
                onChange={(e) => setForm({ ...form, name: e.target.value })}
                required
              />
            </div>
            <div>
              <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</label>
              <input
                type="email"
                value={form.email}
                onChange={(e) => setForm({ ...form, email: e.target.value })}
                required
              />
            </div>
            <div>
              <label>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:</label>
              <textarea
                rows="4"
                value={form.message}
                onChange={(e) => setForm({ ...form, message: e.target.value })}
              ></textarea>
            </div>
            <button type="submit">‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</button>
          </form>
        </section>
      </main>

      <footer>
        <p>&copy; ‡∏ô‡∏≤‡∏¢‡∏Å‡∏±‡∏°‡∏õ‡∏ô‡∏≤‡∏ó ‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏≤</p>
      </footer>
    </div>
  );
}

export default App;
